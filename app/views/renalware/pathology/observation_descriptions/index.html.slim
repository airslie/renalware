ruby:
  def name_and_desc(parts)
    parts = Array(parts).compact.uniq.reject(&:blank?)
    return if parts.empty?

    parts.length == 2 ? "#{parts[0]} (#{parts[1]})" : parts[0]
  end

= content_for :filters do
  = render "filters", query: query, url: renalware.pathology_observation_descriptions_path

= within_admin_layout(title: "Observation descriptions (OBX)") do
  table
    thead
      tr
        th.border-gray-400(colspan=5)
        th.text-center.bg-gray-100.border-gray-400.border-solid.border(colspan=3) Measurement unit
      tr.border-r-2
        th.col-width-tiny
        th.col-width-small= sort_link(query, :code, "Code")
        th.col-width-large= sort_link(query, :name, "Name")
        th.col-width-small RR Type
        th.col-width-medium.border-gray-400 RR Coding Standard
        th.bg-gray-100.text-center= sort_link(query, :measurement_unit_name, "Current")
        th.bg-gray-100.text-center= sort_link(query, :suggested_measurement_unit, "Suggested")
        th.bg-gray-100.text-center UKRDC unit
    tbody
      - descriptions.each do |description|
        tr.border-r-2
          td.actions= link_to_if(policy(description).edit?, "Edit", [:edit, description])
          td= description.code
          td= description.name
          td= description.rr_type
          td.border-gray-400
            = description.rr_coding_standard
          td.bg-gray-100
            - unit = description.measurement_unit
            = name_and_desc([unit.name, unit.description]) if unit
          td.bg-gray-100
            - unit = description.suggested_measurement_unit
            = name_and_desc([unit.name, unit.description]) if unit
          td.bg-gray-100
            - unit = description.measurement_unit&.ukrdc_measurement_unit
            = name_and_desc([unit.name, unit.description]) if unit

  == pagy_foundation_nav pagy
